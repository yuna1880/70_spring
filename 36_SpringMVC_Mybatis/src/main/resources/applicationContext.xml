<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.spring.biz.board, com.spring.biz.user" />

	<!-- === Spring JDBC 관련 설정 === -->
	<!-- DataSource 설정 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
			destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="mystudy" />
		<property name="password" value="mystudypw" />
	</bean>
	
	<!-- 스프링 JDBC JdbcTemplate 객체(인스턴스) 생성 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- ===================================== -->
	<!-- 스프링-마이바티스 연동 설정 -->
	<!--방법1: SqlSessionDaoSupport 상속 구현시
		SqlSessionFactoryBean 타입객체 사용    -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" 
				value="classpath:mybatis-config.xml"/>
		<!-- 매퍼 파일의 위치 정보 등록 
		<property name="mapperLocations" value="classpath:mappings/*Mapper.xml"/>
		-->
	</bean>
	<!-- 방법2: SqlSessionTemplate 사용 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
</beans>







